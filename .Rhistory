libraries("swirl")
library("swirl")
swirl()
5+7
swirl()
library("swirl")
swirl()
cars
cars$mpgCity
myMPG <- cars$mpgCity
mean(myMPG)
median(myMPG)
table(myMPG)
mode(myMPG)
18
19
swirl()
range(cars$price)
61.9-7.4
var(cars$price)
sd(cars$price)
20
mtcars
allMPG <- mtcars$mpg
allMPG
mean(allMPG)
sampMeanMPG <- mean(allMPG)
sampVarMPG <- var(allMPG)
n <- length(allMPG)
tstat <- (sampMeanMPG - 12.0) / sqrt(sampVarMPG/n)
myDF <- n - 1
tstat
myDF
pVal1 <- pt(tstat, df = myDF, lower.tail = FALSE)
pVal <- pVal1 * 2
pVal
t.test(allMPG, mu=12.0, alternative="two.sided")
library(devtools)
find.package("devtools")
install.packages("devtools")
library(devtools)
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
help read.table
help read.table()
?read.table
help("read.table")
getwd()
??clipboard
x <- read.clipboard()
setwd(readClipboard())
getwd()
ls
ls()
dir()
source("cachematrix.R")
?matrix()
??identity
x <- matrix(c(1,0,1,0), nrow = 2, ncol = 2)
x
x <- matrix(c(1,1,0,0), nrow = 2, ncol = 2)
x
x <- matrix(c(1,0,0,1), nrow = 2, ncol = 2)
x
makeCacheMatrix(x)
cacheSolve(x)
makeCacheMatrix(x)
cacheSolve(x)
source("cacheVector.R")
vec <- c(1,1,0,0,1,0,1)
vec
vec <- c(vec,0)
vec
makeVector(vec)
cachemean(vec)
cachemean(mean(vec))
cachemean(vec)
cachedVec <- makeVector(vec)
cachemean(cachedVec)
cachedMatrix <- makeCacheMatrix(x)
x
cacheSolve(cachedMatrix)
cachedMatrix$getInverse
inv <- cachedMatrix$getInverse()
inv
data <- cachedMatrix$get()
data
inv <- solve(data)
inv
cachedMatrix$setInverse(inv)
inv
cacheSolve(cachedMatrix)
makeCacheMatrix(x)
x
cachedMatrix <- makeCacheMatrix(x)
cacheSolve(cachedMatrix)
source(cachematrix.R)
source("cachematrix.R")
cachedMatrix <- makeCacheMatrix(x)
cacheSolve(cachedMatrix)
inv
rm(list = setdiff(ls(), lsf.str()))
globalenv()
?get()
existingX <- get(x, envir = globalenv())
existingX <- mget(x, envir = globalenv())
existingX <- mget(x, envir = globalenv(), ifnotfound = NULL)
source("cacheMatrix.R")
source("cacheMatrix.R")
matrix <- matrix(c(1,0,0,1), nrow = 2, ncol = 2)
matrix
cachedMatrix <- makeCacheMatrix(matrix)
cachedMatrix
cacheSolve(cachedMatrix)
source("cacheVector.R")
vec <- c(1,1,1,0,0,0)
cachedVec <- makeVector(vec)
cachedVec
cachemean(cachedVec)
cachemean(cachedVec)
source("cacheMatrix.R")
ls
ls()
cachedMatrix <- makeCacheMatrix(matrix)
cachedMatrix
cacheSolve(cachedMatrix)
cacheSolve(cachedMatrix)
matrix2 <- matrix(c(1,1,1,0), nrow = 2, ncol = 2)
matrix2
cachedMatrix <- makeCacheMatrix(matrix2)
cachedMatrix
cacheSolve(cachedMatrix)
cacheSolve(cachedMatrix)
cachedMatrix <- makeCacheMatrix(matrix)
cachedMatrix2 <- makeCacheMatrix(matrix2)
cacheSolve(cachedMatrix)
cacheSolve(cachedMatrix)
cacheSolve(cacheMatrix2)
cacheSolve(cachedMatrix2)
cacheSolve(cachedMatrix2)
matrix2
matrix
cacheSolve(cachedMatrix2)
cacheSolve(cachedMatrix)
cachedMatrix <- cachedMatrix2
cacheSolve(cachedMatrix)
rm(list = setdiff(ls(), lsf.str()))
source("cachematrix.R")
matrix <- matrix(c(1,1,1,0), nrow = 2, ncol = 2)
matrix
cachedMatrix <- makeCacheMatrix(matrix)
cacheSolve(cachedMatrix)
cacheSolve(cachedMatrix)
source("cachematrix.R")
matrix
cachedMatrix <- makeCacheMatrix(matrix)
cacheSolve(cachedMatrix)
cacheSolve(cachedMatrix)
cacheSolve(cachedMatrix)
